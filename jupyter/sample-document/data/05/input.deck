begin:constant

  ne_nc = 0.01
  
  # driver pulse:
  lambda_1 = 1.0 * micron                                     # wavelength [m]
  omega_1 = 2.0 * pi * c / lambda_1                           # angular frequency [Hz]
  T_1 = 2.0 * pi / omega_1                                    # period [s]
  a_1 = 10.0                                                    # dimensionless amplitude [-]
  tau_1 = 10.0 * T_1
  I_1 = (a_1 / (0.85 * lambda_1))^2 * 1e6                     # intensity [W/cm^2]
  wt_1 = tau_1 / (2.0 * sqrt(loge(2)))
  t0_1 = 2.0 * tau_1

  # source pulse:
  lambda_2 = 5.0 * micron                                    # wavelenght [m]
  omega_2 = 2.0 * pi * c / lambda_2                           # angular frequency [Hz]
  T_2 = 2.0 * pi / omega_2                                    # period [s]
  a_2 = 0.5                                                   # dimensionless amplitude [-]
  tau_2 = 1000.0 * T_2
  I_2 = (a_2 / (0.85 * lambda_2))^2 * 1e6                     # intensity [W/cm^2]
  wt_2 = tau_2 / (2.0 * sqrt(loge(2)))
  t0_2 = 0.0 * femto

  x0 = 0 * lambda_1 
  x1 = 80 * lambda_1
  x2 = 580 * lambda_1
  x3 = 610 * lambda_1

end:constant

begin:control
  nx = 192000
  x_min = 0.0 * lambda_1
  x_max = 80.0 * lambda_1
  t_end = 280.0 * T_1
  field_order = 2
  stdout_frequency = 1000
  print_eta_string = T
  smooth_currents = F
  dt_multiplier = 0.99
  maxwell_solver = yee
  restart_snapshot = rr0001.sdf
  #particle_tstart = 300 * femto
  #dlb_threshold = 0.5
end:control

begin:boundaries
  bc_x_min = simple_laser
  bc_x_max = simple_laser
end:boundaries

begin:window
  move_window = T
  window_v_x = c
  window_start_time = 80.0 * T_1
end:window

begin:species
  name = electron
  charge = -1.0
  mass = 1.0
  npart_per_cell = 10
  density = if((x gt x0) and (x lt x1), critical(omega_1) * (0.0 + (ne_nc - 0.0) * (3.0 - 2.0 * (x - x0)/(x1 - x0)) * ((x - x0)/(x1 - x0))^2), 0.0)
  density = if((x gt x1) and (x lt x2), critical(omega_1) * (ne_nc), density(electron))
  #density = if((x gt x2) and (x lt x3), critical(omega_1) * (ne_nc + (0.0 - ne_nc) * (3.0 - 2.0 * (x - x2)/(x3 - x2)) * ((x - x2)/(x3 - x2))^2), density(electron))
  temp_ev = 0
end:species

begin:species
  name = proton
  charge = 1.0
  mass = 1836.2
  npart_per_cell = 10
  immobile = T
  dumpmask = never
  density = density(electron)
  temp_ev = 0
end:species

begin:laser
  boundary = x_min
  lambda = lambda_1
  intensity_w_cm2 = I_1
  profile = gauss(time, t0_1, wt_1)
  phase = 0.0
  pol_angle = 0.0 * pi
  #t_start = 0.0 * femto
  #t_end = t_end
end:laser

begin:laser
  boundary = x_max
  lambda = 0.5 * lambda_2
  intensity_w_cm2 = I_2
  phase = 0.0
  pol_angle = 0.5 * pi
  t_start = 175.0 * T_1
  #t_end = 147.5 * T_1 + 12.5 * T_1
end:laser

#begin:subset
#  name = tenth
#  random_fraction = 0.001
#  include_species:electron
##  include_species:proton
#end:subset

begin:output
  name = particles
  file_prefix = part
  time_start = 180.0 * T_1
  time_stop = 280.0 * T_1
  dt_snapshot = 1.0 * T_1
  particle_grid = always + single
  px = always + single
  #py = always + single
  #pz = always + single
  #particle_weight = always + single
  dump_first = F
  dump_last = F
  restartable = F
end:output

begin:output
  name = fields
  file_prefix = field
  time_start = 180.0 * T_1
  time_stop = 280.0 * T_1
  dt_snapshot = 1.0 * T_1
  grid = always + single
  ex = always + single
  ey = always + single
  ez = always + single
  #bx = always + single
  by = always + single
  #bz = always + single
  dump_first = F
  dump_last = F
  restartable = F
end:output

begin:output
  name = density
  file_prefix = dens
  time_start = 180.0 * T_1
  time_stop = 280.0 * T_1
  dt_snapshot = 1.0 * T_1
  #mass_density = always + single + species
  #charge_density = always + single + species
  number_density = always + single + species
  dump_first = F
  dump_last = F
  restartable = F
end:output

#begin:output
#  name = diag
#  file_prefix = diag
#  dt_snapshot = 10 * femto
#  ekbar = always + single + species
#  ekflux = always + single + species
#  poynt_flux = always + single
#  temperature = always + single + species
## absorption = always                          # does not work for tight-focusing
#  total_energy_sum = always
#  dump_first = F
#  dump_last = F
#  restartable = F
#end:output

#begin:output
#  name = restart
#  file_prefix = rr
#  dump_at_times = 174.0 * T_1
#  dump_first = F
#  dump_last = F
#  restartable = T
#end:output
